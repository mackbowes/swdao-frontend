/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface Paths {
  "/api/prices/{buyToken}/{sellToken}/{sellAmount}": {
    /** Get price for a possible sale */
    post: {
      parameters: {
        path: {
          /** Address of token to buy */
          buyToken: string;
          /** Address of token to sell */
          sellToken: string;
          /** Amount in wei to quote */
          sellAmount: string;
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["QuoteResponse"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
      };
      requestBody: {
        content: {
          "application/json": Components["schemas"]["ChainIdRequest"];
        };
      };
    };
  };
  "/api/quotes/{buyToken}/{sellToken}/{sellAmount}": {
    /** request a quote for a sale */
    post: {
      parameters: {
        path: {
          /** Address of token to buy */
          buyToken: string;
          /** Address of token to sell */
          sellToken: string;
          /** Amount in wei to quote */
          sellAmount: string;
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["QuoteResponse"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
      };
      requestBody: {
        content: {
          "application/json": Components["schemas"]["ChainIdRequest"];
        };
      };
    };
  };
  "/api/signup/": {
    /** signup to mailing list */
    post: {
      responses: {
        /** OK */
        200: Components["schemas"]["200Response"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
      };
      requestBody: {
        content: {
          "application/json": Components["schemas"]["EmailSignupRequest"];
        };
      };
    };
  };
  "/api/tokens/detail/{symbol}": {
    /** Get Extended Details of a given token */
    get: {
      parameters: {
        path: {
          /** The uppercase symbol */
          symbol?: string;
        };
        query: {
          /** Chain ID as "0xNN" */
          chainId?: string;
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["ExtendedTokenDetailResponse"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
        /** Not Found */
        404: Components["schemas"]["404Response"];
      };
    };
  };
  "/api/tokens/swappable/price/ethereum": {
    /** Get current ETH price */
    get: {
      parameters: {
        query: {
          /** Chain ID as "0xNN" */
          chainId?: string;
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["ETHPriceResponse"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
      };
    };
  };
  "/api/tokens/swappable/all": {
    /** Get ERC20 and TokenProducts addresses */
    get: {
      parameters: {
        query: {
          /** Chain ID as "0xNN" */
          chainId?: string;
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["SwappableTokensResponse"];
        /** Client Error */
        400: Components["schemas"]["400Response"];
      };
    };
  };
  "/api/tokens/swappable/products/{token}/{currency}/{timeframe}": {
    /** Get detailed information for Token, with prices in Currency, in requested timeframe. */
    get: {
      parameters: {
        path: {
          /** token symbol, in uppercase, or "full" to get all symbols available */
          token: string;
          /** base currency for pricing, eg. "USD" */
          currency: string;
          timeframe: "1D" | "1W" | "1M" | "1Y";
        };
      };
      responses: {
        /** OK */
        200: Components["schemas"]["TokenDetailsResponse"];
      };
    };
  };
}

export interface Components {
  schemas: {
    "200Response": { [key: string]: unknown };
    "400Response": {
      code: number;
      message?: string[];
      validationErrors?: unknown[];
    };
    "404Response": { [key: string]: unknown };
    /** @example [object Object] */
    AddressMap: { [key: string]: string };
    ChainIdRequest: {
      chainId: string;
    };
    EmailSignupRequest: {
      email?: string;
    };
    ExtendedTokenDetailResponse: {
      address?: string;
      symbol: string;
      marketCap?: number;
      changePercent1Day?: number;
      volume1Day?: number;
      totalSupply?: number;
      currentPrice?: number;
      tokenset?: Components["schemas"]["Tokenset"][];
    };
    ETHPriceResponse: {
      ETH?: string;
    };
    QuoteResponse: {
      price?: number;
      guaranteedPrice?: number;
      to?: string;
      data?: string;
      value?: number;
      gasPrice?: number;
      gas?: number;
      estimatedGas?: number;
      protocolFee?: number;
      mimimumProtocolFee?: number;
      buyAmount?: number;
      sellAmount?: number;
      sources?: unknown[];
      buyTokenAddress?: string;
      sellTokenAddress?: string;
      allowanceTarget?: string;
    };
    SwappableTokensResponse: {
      ERC20?: Components["schemas"]["AddressMap"];
      TokenProducts?: Components["schemas"]["AddressMap"];
    };
    TokenDetail: {
      address?: string;
      symbol?: string;
      /** @description Price array as [timestamp, price] */
      prices?: number[][];
    };
    TokenDetailsResponse: Components["schemas"]["TokenDetail"][];
    Tokenset: {
      symbol?: string;
      address?: string;
      image?: string;
      changePercent1Day?: string;
      currentPrice?: string;
      percentOfSet?: string;
      quantity?: string;
    };
  };
}

// export interface operations {}

// export interface external {}
